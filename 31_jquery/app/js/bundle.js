(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

$(".tabs__item").not(":first").hide();
$(".tabs__btn").click(function () {
  $(".tabs__btn").removeClass("active").eq($(this).index()).addClass("active");
  $(".tabs__item").hide().eq($(this).index()).fadeIn();
}).eq(0).addClass("active");
$('.tabs__icons-star:lt(4)').addClass("active"); //////////////Rating bar set///

var circle = document.querySelector('.progress-ring__circle-border');
var radius = circle.r.baseVal.value;
var circleLength = 2 * Math.PI * radius;
circle.style.strokeDasharray = "".concat(circleLength, " ").concat(circleLength);
circle.style.strokeDasharray = circleLength;

function setRating(rating) {
  var offset = circleLength - +rating / 10 * circleLength;
  circle.style.strokeDashoffset = offset;
}

var ratingVal = document.querySelector('.rating-value').innerHTML;
setRating(ratingVal); /////////////calculator///////

var calc = $('.calculator');
var calcDisplay = $('.calculator__display');
var calcKeys = $('.calculator__key');
var calcButton = $('.calculator__button');
var calcClear = $('.calculator__clear');
var calcEqual = $('.calculator__key-equal');
var calcPower = $('.calculator__power');
var calcSpace = $('.calculator__backspace');
calcKeys.each(function () {
  var current = $(this).attr('value');
  $(this).text(current);
});
calcButton.on('click', function () {
  calcDisplay.val(calcDisplay.val() + $(this).attr('value'));
});
calcClear.on('click', function () {
  calcDisplay.val('');
});
calcEqual.on('click', function () {
  calcDisplay.val(eval(calcDisplay.val()));
});
calcPower.on('click', function () {
  calcDisplay.val(Math.pow(calcDisplay.val(), 3));
});
calcSpace.on('click', function () {
  calcDisplay.val(calcDisplay.val().substring(0, calcDisplay.val().length - 1));
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
