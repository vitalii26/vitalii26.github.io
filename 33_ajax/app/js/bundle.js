(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var movies = [];
var submitBtn = document.querySelector('.film__form-submit');
var filmTitle = document.querySelector('#filmTitle');
var filmType = document.querySelector('#filmType');
var filmPaginationStatus = document.querySelector('.film__pagination-status');
var filmPaginationPrev = document.querySelector('.film__pagination-prev');
var filmPaginationNext = document.querySelector('.film__pagination-next');

var generateElement = function generateElement(tagName) {
  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var el = document.createElement(tagName);

  if (className) {
    el.classList.add(className);
  }

  return el;
};

var insertElementIntoParent = function insertElementIntoParent(elements, parentElement) {
  elements.forEach(function (element) {
    parentElement.appendChild(element);
  });
};

var info = document.querySelector('.info');
var filmList = document.querySelector('#filmList');

function addMovies(title, type, id) {
  var filmListItem = generateElement('li', 'film__list-item');
  var filmListInner = generateElement('div', 'film__list-inner');
  var filmListTitle = generateElement('h3', 'film__list-item-title');
  var filmListText = generateElement('p', 'film__list-item-text');
  var filmListBtn = generateElement('button', 'film__list-item-btn');
  filmList.append(filmListItem);
  filmListItem.append(filmListInner);
  filmListBtn.setAttribute('data-id', id);
  filmListBtn.innerHTML = 'details';
  insertElementIntoParent([filmListTitle, filmListText, filmListBtn], filmListInner);
  filmListTitle.innerHTML = title;
  filmListText.innerHTML = type;
}

function addInfo(title, type, year, poster, genre, actors, country, rating) {
  var filmInfo = generateElement('div', 'film__info');
  var filmInfoImgWrap = generateElement('div', 'film__info-img-wrap');
  var filmInfoWrap = generateElement('div', 'film__info-wrap');
  var filmImg = generateElement('img', 'film__info-img');
  var filmInfoType = generateElement('p', 'film__info-type');
  var filmInfoGenre = generateElement('p', 'film__info-genre');
  var filmInfoActors = generateElement('p', 'film__info-actors');
  var filmInfoCountry = generateElement('p', 'film__info-country');
  var filmInfoRating = generateElement('p', 'film__info-rating');
  var filmInfoTitle = generateElement('h3', 'film__info-title');
  var filmInfoYear = generateElement('h4', 'film__info-year');
  filmInfoImgWrap.append(filmImg);
  info.append(filmInfo);
  insertElementIntoParent([filmInfoImgWrap, filmInfoWrap], filmInfo);
  insertElementIntoParent([filmInfoTitle, filmInfoYear, filmInfoType, filmInfoGenre, filmInfoActors, filmInfoCountry, filmInfoRating], filmInfoWrap);
  filmImg.setAttribute('src', poster);
  filmInfoType.innerHTML = "Type: ".concat(type);
  filmInfoTitle.innerHTML = title;
  filmInfoYear.innerHTML = "Year: ".concat(year);
  filmInfoGenre.innerHTML = "Genre: ".concat(genre);
  filmInfoActors.innerHTML = "Actors: ".concat(actors);
  filmInfoCountry.innerHTML = "Country: ".concat(country);
  filmInfoRating.innerHTML = "IMDBRating: ".concat(rating);
}

var page = 1;
var pages = 1;
submitBtn.addEventListener('click', function (e) {
  page = 1;
  var url = "http://www.omdbapi.com/?apikey=2a2c5021&s=".concat(filmTitle.value, "&type=").concat(filmType.value, "&page=").concat(page);
  e.preventDefault();
  filmList.innerHTML = '';

  if (filmTitle.value) {
    fetch(url).then(function (response) {
      if (response.status !== 200) {
        console.log("We have a problem. Status Code: ".concat(response.status));
        return;
      } else {
        response.json().then(function (data) {
          if (data.Response === 'True') {
            console.log(data);
            pages = Math.ceil(data.totalResults / 10);
            filmPaginationStatus.innerHTML = "".concat(page, " of ").concat(pages);
            data.Search.forEach(function (element) {
              return addMovies(element.Title, element.Type, element.imdbID);
            });
          } else {
            filmList.innerHTML = data.Error;
          }
        });
      }
    })["catch"](function (err) {
      console.error(err);
    });
  }
});
filmList.addEventListener('click', function (event) {
  if (event.target.className == 'film__list-item-btn') {
    info.innerHTML = movies;
    var filmId = event.target.getAttribute('data-id');
    var url = "http://www.omdbapi.com/?apikey=2a2c5021&i=".concat(filmId);
    fetch(url).then(function (response) {
      if (response.status !== 200) {
        console.log("We have a problem. Status Code: ".concat(response.status));
        return;
      } else {
        response.json().then(function (data) {
          if (data.Response === 'True') {
            addInfo(data.Title, data.Type, data.Year, data.Poster, data.Genre, data.Actors, data.Country, data.imdbRating);
          } else {
            filmList.innerHTML = data.Error;
          }
        });
      }
    })["catch"](function (err) {
      console.error(err);
    });
  }
});
filmPaginationPrev.addEventListener('click', function () {
  if (page > 1) {
    page--;
  } else {
    page = 1;
  }

  var url = "http://www.omdbapi.com/?apikey=2a2c5021&s=".concat(filmTitle.value, "&type=").concat(filmType.value, "&page=").concat(page);
  filmList.innerHTML = '';

  if (filmTitle.value) {
    fetch(url).then(function (response) {
      if (response.status !== 200) {
        console.log("We have a problem. Status Code: ".concat(response.status));
        return;
      } else {
        response.json().then(function (data) {
          if (data.Response === 'True') {
            console.log(data);

            var _pages = Math.ceil(data.totalResults / 10);

            filmPaginationStatus.innerHTML = "".concat(page, " of ").concat(_pages);
            data.Search.forEach(function (element) {
              return addMovies(element.Title, element.Type, element.imdbID);
            });
          } else {
            filmList.innerHTML = data.Error;
          }
        });
      }
    })["catch"](function (err) {
      console.error(err);
    });
  }
});
filmPaginationNext.addEventListener('click', function () {
  if (page < pages) {
    page++;
  } else {
    page = pages;
  }

  var url = "http://www.omdbapi.com/?apikey=2a2c5021&s=".concat(filmTitle.value, "&type=").concat(filmType.value, "&page=").concat(page);
  filmList.innerHTML = '';

  if (filmTitle.value) {
    fetch(url).then(function (response) {
      if (response.status !== 200) {
        console.log("We have a problem. Status Code: ".concat(response.status));
        return;
      } else {
        response.json().then(function (data) {
          if (data.Response === 'True') {
            console.log(data);
            pages = Math.ceil(data.totalResults / 10);
            filmPaginationStatus.innerHTML = "".concat(page, " of ").concat(pages);
            data.Search.forEach(function (element) {
              return addMovies(element.Title, element.Type, element.imdbID);
            });
          } else {
            filmList.innerHTML = data.Error;
          }
        });
      }
    })["catch"](function (err) {
      console.error(err);
    });
  }
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwcm9qZWN0cy8zM19hamF4L3NyYy9qcy9hcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQUksTUFBTSxHQUFHLEVBQWI7QUFDQSxJQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixvQkFBdkIsQ0FBbEI7QUFDQSxJQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixZQUF2QixDQUFsQjtBQUNBLElBQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxhQUFULENBQXVCLFdBQXZCLENBQWpCO0FBQ0EsSUFBTSxvQkFBb0IsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QiwwQkFBdkIsQ0FBN0I7QUFDQSxJQUFNLGtCQUFrQixHQUFHLFFBQVEsQ0FBQyxhQUFULENBQXVCLHdCQUF2QixDQUEzQjtBQUNBLElBQU0sa0JBQWtCLEdBQUcsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsd0JBQXZCLENBQTNCOztBQUVBLElBQU0sZUFBZSxHQUFHLFNBQWxCLGVBQWtCLENBQUMsT0FBRCxFQUE2QjtBQUFBLE1BQW5CLFNBQW1CLHVFQUFQLEVBQU87QUFDcEQsTUFBTSxFQUFFLEdBQUcsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsT0FBdkIsQ0FBWDs7QUFDQSxNQUFJLFNBQUosRUFBZTtBQUNkLElBQUEsRUFBRSxDQUFDLFNBQUgsQ0FBYSxHQUFiLENBQWlCLFNBQWpCO0FBQ0E7O0FBRUQsU0FBTyxFQUFQO0FBQ0EsQ0FQRDs7QUFTQSxJQUFNLHVCQUF1QixHQUFHLFNBQTFCLHVCQUEwQixDQUFDLFFBQUQsRUFBVyxhQUFYLEVBQTZCO0FBQzVELEVBQUEsUUFBUSxDQUFDLE9BQVQsQ0FBaUIsVUFBQSxPQUFPLEVBQUk7QUFDM0IsSUFBQSxhQUFhLENBQUMsV0FBZCxDQUEwQixPQUExQjtBQUNBLEdBRkQ7QUFHQSxDQUpEOztBQUtBLElBQU0sSUFBSSxHQUFHLFFB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QUFPLENBQUMsR0FBUiwyQ0FBK0MsUUFBUSxDQUFDLE1BQXhEO0FBQ0E7QUFDQSxPQUhELE1BR087QUFDTixRQUFBLFFBQVEsQ0FBQyxJQUFULEdBQ0MsSUFERCxDQUNNLFVBQUMsSUFBRCxFQUFVO0FBQ2YsY0FBSSxJQUFJLENBQUMsUUFBTCxLQUFrQixNQUF0QixFQUE4QjtBQUM3QixZQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksSUFBWjtBQUNBLFlBQUEsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFMLENBQVUsSUFBSSxDQUFDLFlBQUwsR0FBa0IsRUFBNUIsQ0FBUjtBQUNBLFlBQUEsb0JBQW9CLENBQUMsU0FBckIsYUFBb0MsSUFBcEMsaUJBQStDLEtBQS9DO0FBQ0EsWUFBQSxJQUFJLENBQUMsTUFBTCxDQUFZLE9BQVosQ0FBb0IsVUFBQyxPQUFEO0FBQUEscUJBQWEsU0FBUyxDQUFDLE9BQU8sQ0FBQyxLQUFULEVBQWdCLE9BQU8sQ0FBQyxJQUF4QixFQUE4QixPQUFPLENBQUMsTUFBdEMsQ0FBdEI7QUFBQSxhQUFwQjtBQUVBLFdBTkQsTUFNTztBQUNOLFlBQUEsUUFBUSxDQUFDLFNBQVQsR0FBcUIsSUFBSSxDQUFDLEtBQTFCO0FBQ0E7QUFFRCxTQVpEO0FBYUE7QUFDRCxLQXBCRCxXQXFCTyxVQUFDLEdBQUQsRUFBUztBQUNmLE1BQUEsT0FBTyxDQUFDLEtBQVIsQ0FBYyxHQUFkO0FBRUEsS0F4QkQ7QUF5QkE7QUFDRCxDQW5DRCIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwibGV0IG1vdmllcyA9IFtdO1xyXG5jb25zdCBzdWJtaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmlsbV9fZm9ybS1zdWJtaXQnKTtcclxuY29uc3QgZmlsbVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZpbG1UaXRsZScpO1xyXG5jb25zdCBmaWxtVHlwZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmaWxtVHlwZScpO1xyXG5jb25zdCBmaWxtUGFnaW5hdGlvblN0YXR1cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5maWxtX19wYWdpbmF0aW9uLXN0YXR1cycpO1xyXG5jb25zdCBmaWxtUGFnaW5hdGlvblByZXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmlsbV9fcGFnaW5hdGlvbi1wcmV2Jyk7XHJcbmNvbnN0IGZpbG1QYWdpbmF0aW9uTmV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5maWxtX19wYWdpbmF0aW9uLW5leHQnKTtcclxuXHJcbmNvbnN0IGdlbmVyYXRlRWxlbWVudCA9ICh0YWdOYW1lLCBjbGFzc05hbWUgPSAnJykgPT4ge1xyXG5cdGNvbnN0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWdOYW1lKTtcclxuXHRpZiAoY2xhc3NOYW1lKSB7XHJcblx0XHRlbC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZWw7XHJcbn1cclxuXHJcbmNvbnN0IGluc2VydEVsZW1lbnRJbnRvUGFyZW50ID0gKGVsZW1lbnRzLCBwYXJlbnRFbGVtZW50KSA9PiB7XHJcblx0ZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuXHRcdHBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XHJcblx0fSlcclxufVxyXG5jb25zdCBpbmZvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmluZm8nKTtcclxuY29uc3QgZmlsbUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZmlsbUxpc3QnKTtcclxuZnVuY3Rpb24gYWRkTW92aWVzKHRpdGxlLCB0eXBlLCBpZCkge1xyXG5cdGNvbnN0IGZpbG1MaXN0SXRlbSA9IGdlbmVyYXRlRWxlbWVudCgnbGknLCAnZmlsbV9fbGlzdC1pdGVtJyk7XHJcblx0Y29uc3QgZmlsbUxpc3RJbm5lciA9IGdlbmVyYXRlRWxlbWVudCgnZGl2JywgJ2ZpbG1fX2xpc3QtaW5uZXInKTtcclxuXHRjb25zdCBmaWxtTGlzdFRpdGxlID0gZ2VuZXJhdGVFbGVtZW50KCdoMycsICdmaWxtX19saXN0LWl0ZW0tdGl0bGUnKTtcclxuXHRjb25zdCBmaWxtTGlzdFRleHQgPSBnZW5lcmF0ZUVsZW1lbnQoJ3AnLCAnZmlsbV9fbGlzdC1pdGVtLXRleHQnKTtcclxuXHRjb25zdCBmaWxtTGlzdEJ0biA9IGdlbmVyYXRlRWxlbWVudCgnYnV0dG9uJywgJ2ZpbG1fX2xpc3QtaXRlbS1idG4nKTtcclxuXHRmaWxtTGlzdC5hcHBlbmQoZmlsbUxpc3RJdGVtKTtcclxuXHRmaWxtTGlzdEl0ZW0uYXBwZW5kKGZpbG1MaXN0SW5uZXIpO1xyXG5cdGZpbG1MaXN0QnRuLnNldEF0dHJpYnV0ZSgnZGF0YS1pZCcsIGlkKTtcclxuXHRmaWxtTGlzdEJ0bi5pbm5lckhUTUwgPSAnZGV0YWlscyc7XHJcblx0aW5zZXJ0RWxlbWVudEludG9QYXJlbnQoW2ZpbG1MaXN0VGl0bGUsIGZpbG1MaXN0VGV4dCwgZmlsbUxpc3RCdG5dLCBmaWxtTGlzdElubmVyKTtcclxuXHRmaWxtTGlzdFRpdGxlLmlubmVySFRNTCA9IHRpdGxlO1xyXG5cdGZpbG1MaXN0VGV4dC5pbm5lckhUTUwgPSB0eXBlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhZGRJbmZvKHRpdGxlLCB0eXBlLCB5ZWFyLCBwb3N0ZXIsIGdlbnJlLCBhY3RvcnMsIGNvdW50cnksIHJhdGluZykge1xyXG5cdGNvbnN0IGZpbG1JbmZvID0gZ2VuZXJhdGVFbGVtZW50KCdkaXYnLCAnZmlsbV9faW5mbycpO1xyXG5cdGNvbnN0IGZpbG1JbmZvSW1nV3JhcCA9IGdlbmVyYXRlRWxlbWVudCgnZGl2JywgJ2ZpbG1fX2luZm8taW1nLXdyYXAnKTtcclxuXHRjb25zdCBmaWxtSW5mb1dyYXAgPSBnZW5lcmF0ZUVsZW1lbnQoJ2RpdicsICdmaWxtX19pbmZvLXdyYXAnKTtcclxuXHRjb25zdCBmaWxtSW1nID0gZ2VuZXJhdGVFbGVtZW50KCdpbWcnLCAnZmlsbV9faW5mby1pbWcnKTtcclxuXHRjb25zdCBmaWxtSW5mb1R5cGUgPSBnZW5lcmF0ZUVsZW1lbnQoJ3AnLCAnZmlsbV9faW5mby10eXBlJyk7XHJcblx0Y29uc3QgZmlsbUluZm9HZW5yZSA9IGdlbmVyYXRlRWxlbWVudCgncCcsICdmaWxtX19pbmZvLWdlbnJlJyk7XHJcblx0Y29uc3QgZmlsbUluZm9BY3RvcnMgPSBnZW5lcmF0ZUVsZW1lbnQoJ3AnLCAnZmlsbV9faW5mby1hY3RvcnMnKTtcclxuXHRjb25zdCBmaWxtSW5mb0NvdW50cnkgPSBnZW5lcmF0ZUVsZW1lbnQoJ3AnLCAnZmlsbV9faW5mby1jb3VudHJ5Jyk7XHJcblx0Y29uc3QgZmlsbUluZm9SYXRpbmcgPSBnZW5lcmF0ZUVsZW1lbnQoJ3AnLCAnZmlsbV9faW5mby1yYXRpbmcnKTtcclxuXHRjb25zdCBmaWxtSW5mb1RpdGxlID0gZ2VuZXJhdGVFbGVtZW50KCdoMycsICdmaWxtX19pbmZvLXRpdGxlJyk7XHJcblx0Y29uc3QgZmlsbUluZm9ZZWFyID0gZ2VuZXJhdGVFbGVtZW50KCdoNCcsICdmaWxtX19pbmZvLXllYXInKTtcclxuXHRmaWxtSW5mb0ltZ1dyYXAuYXBwZW5kKGZpbG1JbWcpO1xyXG5cdGluZm8uYXBwZW5kKGZpbG1JbmZvKTtcclxuXHRpbnNlcnRFbGVtZW50SW50b1BhcmVudChbZmlsbUluZm9JbWdXcmFwLCBmaWxtSW5mb1dyYXBdLCBmaWxtSW5mbyk7XHJcblx0aW5zZXJ0RWxlbWVudEludG9QYXJlbnQoW2ZpbG1JbmZvVGl0bGUsIGZpbG1JbmZvWWVhciwgZmlsbUluZm9UeXBlLCBmaWxtSW5mb0dlbnJlLCBmaWxtSW5mb0FjdG9ycywgZmlsbUluZm9Db3VudHJ5LCBmaWxtSW5mb1JhdGluZ10sIGZpbG1JbmZvV3JhcCk7XHJcblx0ZmlsbUltZy5zZXRBdHRyaWJ1dGUoJ3NyYycsIHBvc3Rlcik7XHJcblx0ZmlsbUluZm9UeXBlLmlubmVySFRNTCA9IGBUeXBlOiAke3R5cGV9YDtcclxuXHRmaWxtSW5mb1RpdGxlLmlubmVySFRNTCA9IHRpdGxlO1xyXG5cdGZpbG1JbmZvWWVhci5pbm5lckhUTUwgPSBgWWVhcjogJHt5ZWFyfWA7XHJcblx0ZmlsbUluZm9HZW5yZS5pbm5lckhUTUwgPSBgR2VucmU6ICR7Z2VucmV9YDtcclxuXHRmaWxtSW5mb0FjdG9ycy5pbm5lckhUTUwgPSBgQWN0b3JzOiAke2FjdG9yc31gO1xyXG5cdGZpbG1JbmZvQ291bnRyeS5pbm5lckhUTUwgPSBgQ291bnRyeTogJHtjb3VudHJ5fWA7XHJcblx0ZmlsbUluZm9SYXRpbmcuaW5uZXJIVE1MID0gYElNREJSYXRpbmc6ICR7cmF0aW5nfWA7XHJcbn1cclxubGV0IHBhZ2UgPSAxO1xyXG5sZXQgcGFnZXMgPSAxO1xyXG5zdWJtaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG5cdHBhZ2UgPSAxO1xyXG5cdGxldCB1cmwgPSBgaHR0cDovL3d3dy5vbWRiYXBpLmNvbS8/YXBpa2V5PTJhMmM1MDIxJnM9JHtmaWxtVGl0bGUudmFsdWV9JnR5cGU9JHtmaWxtVHlwZS52YWx1ZX0mcGFnZT0ke3BhZ2V9YDtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0ZmlsbUxpc3QuaW5uZXJIVE1MID0gJyc7XHJcblx0aWYgKGZpbG1UaXRsZS52YWx1ZSkge1xyXG5cdFx0ZmV0Y2godXJsKVxyXG5cdFx0LnRoZW4oKHJlc3BvbnNlKSA9PiB7XHJcblx0XHRcdGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwMCkge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGBXZSBoYXZlIGEgcHJvYmxlbS4gU3RhdHVzIENvZGU6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXNwb25zZS5qc29uKClcclxuXHRcdFx0XHQudGhlbigoZGF0YSkgPT4ge1xyXG5cdFx0XHRcdFx0aWYgKGRhdGEuUmVzcG9uc2UgPT09ICdUcnVlJykge1xyXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhkYXRhKTtcclxuXHRcdFx0XHRcdFx0cGFnZXMgPSBNYXRoLmNlaWwoZGF0YS50b3RhbFJlc3VsdHMvMTApO1xyXG5cdFx0XHRcdFx0XHRmaWxtUGFnaW5hdGlvblN0YXR1cy5pbm5lckhUTUwgPSBgJHtwYWdlfSBvZiAke3BhZ2VzfWA7XHJcblx0XHRcdFx0XHRcdGRhdGEuU2VhcmNoLmZvckVhY2goKGVsZW1lbnQpID0+IGFkZE1vdmllcyhlbGVtZW50LlRpdGxlLCBlbGVtZW50LlR5cGUsIGVsZW1lbnQuaW1kYklEKSk7XHJcblxyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0ZmlsbUxpc3QuaW5uZXJIVE1MID0gZGF0YS5FcnJvcjtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHRcdC5jYXRjaCgoZXJyKSA9PiB7XHJcblx0XHRcdGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuXHJcblx0XHR9KVxyXG5cdH1cclxufSk7XHJcbmZpbG1MaXN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcblx0aWYgKGV2ZW50LnRhcmdldC5jbGFzc05hbWUgPT0gJ2ZpbG1fX2xpc3QtaXRlbS1idG4nKSB7XHJcblx0XHRpbmZvLmlubmVySFRNTCA9IG1vdmllcztcclxuXHRcdGxldCBmaWxtSWQgPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLWlkJyk7XHJcblx0XHRsZXQgdXJsID0gYGh0dHA6Ly93d3cub21kYmFwaS5jb20vP2FwaWtleT0yYTJjNTAyMSZpPSR7ZmlsbUlkfWA7XHJcblx0XHRmZXRjaCh1cmwpXHJcblx0XHQudGhlbigocmVzcG9uc2UpID0+IHtcclxuXHRcdFx0aWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coYFdlIGhhdmUgYSBwcm9ibGVtLiBTdGF0dXMgQ29kZTogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHJlc3BvbnNlLmpzb24oKVxyXG5cdFx0XHRcdC50aGVuKChkYXRhKSA9PiB7XHJcblx0XHRcdFx0XHRpZiAoZGF0YS5SZXNwb25zZSA9PT0gJ1RydWUnKSB7XHJcblx0XHRcdFx0XHRcdGFkZEluZm8oZGF0YS5UaXRsZSwgZGF0YS5UeXBlLCBkYXRhLlllYXIsIGRhdGEuUG9zdGVyLCBkYXRhLkdlbnJlLCBkYXRhLkFjdG9ycywgZGF0YS5Db3VudHJ5LCBkYXRhLmltZGJSYXRpbmcpO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0ZmlsbUxpc3QuaW5uZXJIVE1MID0gZGF0YS5FcnJvcjtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHRcdC5jYXRjaCgoZXJyKSA9PiB7XHJcblx0XHRcdGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuXHJcblx0XHR9KVxyXG5cdH1cclxufSk7XHJcblxyXG5maWxtUGFnaW5hdGlvblByZXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcblx0aWYocGFnZSA+IDEpIHtcclxuXHRcdHBhZ2UtLTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0cGFnZSA9IDE7XHJcblx0fVxyXG5cdGxldCB1cmwgPSBgaHR0cDovL3d3dy5vbWRiYXBpLmNvbS8/YXBpa2V5PTJhMmM1MDIxJnM9JHtmaWxtVGl0bGUudmFsdWV9JnR5cGU9JHtmaWxtVHlwZS52YWx1ZX0mcGFnZT0ke3BhZ2V9YDtcclxuXHRmaWxtTGlzdC5pbm5lckhUTUwgPSAnJztcclxuXHRpZiAoZmlsbVRpdGxlLnZhbHVlKSB7XHJcblx0XHRmZXRjaCh1cmwpXHJcblx0XHQudGhlbigocmVzcG9uc2UpID0+IHtcclxuXHRcdFx0aWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coYFdlIGhhdmUgYSBwcm9ibGVtLiBTdGF0dXMgQ29kZTogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHJlc3BvbnNlLmpzb24oKVxyXG5cdFx0XHRcdC50aGVuKChkYXRhKSA9PiB7XHJcblx0XHRcdFx0XHRpZiAoZGF0YS5SZXNwb25zZSA9PT0gJ1RydWUnKSB7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKGRhdGEpO1xyXG5cdFx0XHRcdFx0XHRsZXQgcGFnZXMgPSBNYXRoLmNlaWwoZGF0YS50b3RhbFJlc3VsdHMvMTApO1xyXG5cdFx0XHRcdFx0XHRmaWxtUGFnaW5hdGlvblN0YXR1cy5pbm5lckhUTUwgPSBgJHtwYWdlfSBvZiAke3BhZ2VzfWA7XHJcblx0XHRcdFx0XHRcdGRhdGEuU2VhcmNoLmZvckVhY2goKGVsZW1lbnQpID0+IGFkZE1vdmllcyhlbGVtZW50LlRpdGxlLCBlbGVtZW50LlR5cGUsIGVsZW1lbnQuaW1kYklEKSk7XHJcblxyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0ZmlsbUxpc3QuaW5uZXJIVE1MID0gZGF0YS5FcnJvcjtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHRcdC5jYXRjaCgoZXJyKSA9PiB7XHJcblx0XHRcdGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuXHJcblx0XHR9KVxyXG5cdH1cclxufSk7XHJcbmZpbG1QYWdpbmF0aW9uTmV4dC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuXHRcdGlmIChwYWdlIDwgcGFnZXMpIHtcclxuXHRcdFx0cGFnZSsrO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cGFnZSA9IHBhZ2VzO1xyXG5cdFx0fVxyXG5cdGxldCB1cmwgPSBgaHR0cDovL3d3dy5vbWRiYXBpLmNvbS8/YXBpa2V5PTJhMmM1MDIxJnM9JHtmaWxtVGl0bGUudmFsdWV9JnR5cGU9JHtmaWxtVHlwZS52YWx1ZX0mcGFnZT0ke3BhZ2V9YDtcclxuXHRmaWxtTGlzdC5pbm5lckhUTUwgPSAnJztcclxuXHRpZiAoZmlsbVRpdGxlLnZhbHVlKSB7XHJcblx0XHRmZXRjaCh1cmwpXHJcblx0XHQudGhlbigocmVzcG9uc2UpID0+IHtcclxuXHRcdFx0aWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coYFdlIGhhdmUgYSBwcm9ibGVtLiBTdGF0dXMgQ29kZTogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHJlc3BvbnNlLmpzb24oKVxyXG5cdFx0XHRcdC50aGVuKChkYXRhKSA9PiB7XHJcblx0XHRcdFx0XHRpZiAoZGF0YS5SZXNwb25zZSA9PT0gJ1RydWUnKSB7XHJcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKGRhdGEpO1xyXG5cdFx0XHRcdFx0XHRwYWdlcyA9IE1hdGguY2VpbChkYXRhLnRvdGFsUmVzdWx0cy8xMCk7XHJcblx0XHRcdFx0XHRcdGZpbG1QYWdpbmF0aW9uU3RhdHVzLmlubmVySFRNTCA9IGAke3BhZ2V9IG9mICR7cGFnZXN9YDtcclxuXHRcdFx0XHRcdFx0ZGF0YS5TZWFyY2guZm9yRWFjaCgoZWxlbWVudCkgPT4gYWRkTW92aWVzKGVsZW1lbnQuVGl0bGUsIGVsZW1lbnQuVHlwZSwgZWxlbWVudC5pbWRiSUQpKTtcclxuXHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRmaWxtTGlzdC5pbm5lckhUTUwgPSBkYXRhLkVycm9yO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9XHJcblx0XHR9KVxyXG5cdFx0LmNhdGNoKChlcnIpID0+IHtcclxuXHRcdFx0Y29uc29sZS5lcnJvcihlcnIpO1xyXG5cclxuXHRcdH0pXHJcblx0fVxyXG59KTtcclxuXHJcbiJdLCJwcmVFeGlzdGluZ0NvbW1lbnQiOiIvLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTV2WkdWZmJXOWtkV3hsY3k5aWNtOTNjMlZ5TFhCaFkyc3ZYM0J5Wld4MVpHVXVhbk1pTENKd2NtOXFaV04wY3k4ek0xOWhhbUY0TDNOeVl5OXFjeTloY0hBdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3T3p0QlEwRkJMRWxCUVVrc1RVRkJUU3hIUVVGSExFVkJRV0k3UVVGRFFTeEpRVUZOTEZOQlFWTXNSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJWQ3hEUVVGMVFpeHZRa0ZCZGtJc1EwRkJiRUk3UVVGRFFTeEpRVUZOTEZOQlFWTXNSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJWQ3hEUVVGMVFpeFpRVUYyUWl4RFFVRnNRanRCUVVOQkxFbEJRVTBzVVVGQlVTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xGZEJRWFpDTEVOQlFXcENPMEZCUTBFc1NVRkJUU3h2UWtGQmIwSXNSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJWQ3hEUVVGMVFpd3dRa0ZCZGtJc1EwRkJOMEk3UVVGRFFTeEpRVUZOTEd0Q1FVRnJRaXhIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZVTEVOQlFYVkNMSGRDUVVGMlFpeERRVUV6UWp0QlFVTkJMRWxCUVUwc2EwSkJRV3RDTEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVZRc1EwRkJkVUlzZDBKQlFYWkNMRU5CUVROQ096dEJRVVZCTEVsQlFVMHNaVUZCWlN4SFFVRkhMRk5CUVd4Q0xHVkJRV3RDTEVOQlFVTXNUMEZCUkN4RlFVRTJRanRCUVVGQkxFMUJRVzVDTEZOQlFXMUNMSFZGUVVGUUxFVkJRVTg3UVVGRGNFUXNUVUZCVFN4RlFVRkZMRWRCUVVjc1VVRkJVU3hEUVVGRExHRkJRVlFzUTBGQmRVSXNUMEZCZGtJc1EwRkJXRHM3UVVGRFFTeE5RVUZKTEZOQlFVb3NSVUZCWlR0QlFVTmtMRWxCUVVFc1JVRkJSU3hEUVVGRExGTkJRVWdzUTBGQllTeEhRVUZpTEVOQlFXbENMRk5CUVdwQ08wRkJRMEU3TzBGQlJVUXNVMEZCVHl4RlFVRlFPMEZCUTBFc1EwRlFSRHM3UVVGVFFTeEpRVUZOTEhWQ1FVRjFRaXhIUVVGSExGTkJRVEZDTEhWQ1FVRXdRaXhEUVVGRExGRkJRVVFzUlVGQlZ5eGhRVUZZTEVWQlFUWkNPMEZCUXpWRUxFVkJRVUVzVVVGQlVTeERRVUZETEU5QlFWUXNRMEZCYVVJc1ZVRkJRU3hQUVVGUExFVkJRVWs3UVVGRE0wSXNTVUZCUVN4aFFVRmhMRU5CUVVNc1YwRkJaQ3hEUVVFd1FpeFBRVUV4UWp0QlFVTkJMRWRCUmtRN1FVRkhRU3hEUVVwRU96dEJRVXRCTEVsQlFVMHNTVUZCU1N4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGVUxFTkJRWFZDTEU5QlFYWkNMRU5CUVdJN1FVRkRRU3hKUVVGTkxGRkJRVkVzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCVkN4RFFVRjFRaXhYUVVGMlFpeERRVUZxUWpzN1FVRkRRU3hUUVVGVExGTkJRVlFzUTBGQmJVSXNTMEZCYmtJc1JVRkJNRUlzU1VGQk1VSXNSVUZCWjBNc1JVRkJhRU1zUlVGQmIwTTdRVUZEYmtNc1RVRkJUU3haUVVGWkxFZEJRVWNzWlVGQlpTeERRVUZETEVsQlFVUXNSVUZCVHl4cFFrRkJVQ3hEUVVGd1F6dEJRVU5CTEUxQlFVMHNZVUZCWVN4SFFVRkhMR1ZCUVdVc1EwRkJReXhMUVVGRUxFVkJRVkVzYTBKQlFWSXNRMEZCY2tNN1FVRkRRU3hOUVVGTkxHRkJRV0VzUjBGQlJ5eGxRVUZsTEVOQlFVTXNTVUZCUkN4RlFVRlBMSFZDUVVGUUxFTkJRWEpETzBGQlEwRXNUVUZCVFN4WlFVRlpMRWRCUVVjc1pVRkJaU3hEUVVGRExFZEJRVVFzUlVGQlRTeHpRa0ZCVGl4RFFVRndRenRCUVVOQkxFMUJRVTBzVjBGQlZ5eEhRVUZITEdWQlFXVXNRMEZCUXl4UlFVRkVMRVZCUVZjc2NVSkJRVmdzUTBGQmJrTTdRVUZEUVN4RlFVRkJMRkZCUVZFc1EwRkJReXhOUVVGVUxFTkJRV2RDTEZsQlFXaENPMEZCUTBFc1JVRkJRU3haUVVGWkxFTkJRVU1zVFVGQllpeERRVUZ2UWl4aFFVRndRanRCUVVOQkxFVkJRVUVzVjBGQlZ5eERRVUZETEZsQlFWb3NRMEZCZVVJc1UwRkJla0lzUlVGQmIwTXNSVUZCY0VNN1FVRkRRU3hGUVVGQkxGZEJRVmNzUTBGQlF5eFRRVUZhTEVkQlFYZENMRk5CUVhoQ08wRkJRMEVzUlVGQlFTeDFRa0ZCZFVJc1EwRkJReXhEUVVGRExHRkJRVVFzUlVGQlowSXNXVUZCYUVJc1JVRkJPRUlzVjBGQk9VSXNRMEZCUkN4RlFVRTJReXhoUVVFM1F5eERRVUYyUWp0QlFVTkJMRVZCUVVFc1lVRkJZU3hEUVVGRExGTkJRV1FzUjBGQk1FSXNTMEZCTVVJN1FVRkRRU3hGUVVGQkxGbEJRVmtzUTBGQlF5eFRRVUZpTEVkQlFYbENMRWxCUVhwQ08wRkJRMEU3TzBGQlJVUXNVMEZCVXl4UFFVRlVMRU5CUVdsQ0xFdEJRV3BDTEVWQlFYZENMRWxCUVhoQ0xFVkJRVGhDTEVsQlFUbENMRVZCUVc5RExFMUJRWEJETEVWQlFUUkRMRXRCUVRWRExFVkJRVzFFTEUxQlFXNUVMRVZCUVRKRUxFOUJRVE5FTEVWQlFXOUZMRTFCUVhCRkxFVkJRVFJGTzBGQlF6TkZMRTFCUVUwc1VVRkJVU3hIUVVGSExHVkJRV1VzUTBGQlF5eExRVUZFTEVWQlFWRXNXVUZCVWl4RFFVRm9RenRCUVVOQkxFMUJRVTBzWlVGQlpTeEhRVUZITEdWQlFXVXNRMEZCUXl4TFFVRkVMRVZCUVZFc2NVSkJRVklzUTBGQmRrTTdRVUZEUVN4TlFVRk5MRmxCUVZrc1IwRkJSeXhsUVVGbExFTkJRVU1zUzBGQlJDeEZRVUZSTEdsQ1FVRlNMRU5CUVhCRE8wRkJRMEVzVFVGQlRTeFBRVUZQTEVkQlFVY3NaVUZCWlN4RFFVRkRMRXRCUVVRc1JVRkJVU3huUWtGQlVpeERRVUV2UWp0QlFVTkJMRTFCUVUwc1dVRkJXU3hIUVVGSExHVkJRV1VzUTBGQlF5eEhRVUZFTEVWQlFVMHNhVUpCUVU0c1EwRkJjRU03UVVGRFFTeE5RVUZOTEdGQlFXRXNSMEZCUnl4bFFVRmxMRU5CUVVNc1IwRkJSQ3hGUVVGTkxHdENRVUZPTEVOQlFYSkRPMEZCUTBFc1RVRkJUU3hqUVVGakxFZEJRVWNzWlVGQlpTeERRVUZETEVkQlFVUXNSVUZCVFN4dFFrRkJUaXhEUVVGMFF6dEJRVU5CTEUxQlFVMHNaVUZCWlN4SFFVRkhMR1ZCUVdVc1EwRkJReXhIUVVGRUxFVkJRVTBzYjBKQlFVNHNRMEZCZGtNN1FVRkRRU3hOUVVGTkxHTkJRV01zUjBGQlJ5eGxRVUZsTEVOQlFVTXNSMEZCUkN4RlFVRk5MRzFDUVVGT0xFTkJRWFJETzBGQlEwRXNUVUZCVFN4aFFVRmhMRWRCUVVjc1pVRkJaU3hEUVVGRExFbEJRVVFzUlVGQlR5eHJRa0ZCVUN4RFFVRnlRenRCUVVOQkxFMUJRVTBzV1VGQldTeEhRVUZITEdWQlFXVXNRMEZCUXl4SlFVRkVMRVZCUVU4c2FVSkJRVkFzUTBGQmNFTTdRVUZEUVN4RlFVRkJMR1ZCUVdVc1EwRkJReXhOUVVGb1FpeERRVUYxUWl4UFFVRjJRanRCUVVOQkxFVkJRVUVzU1VGQlNTeERRVUZETEUxQlFVd3NRMEZCV1N4UlFVRmFPMEZCUTBFc1JVRkJRU3gxUWtGQmRVSXNRMEZCUXl4RFFVRkRMR1ZCUVVRc1JVRkJhMElzV1VGQmJFSXNRMEZCUkN4RlFVRnJReXhSUVVGc1F5eERRVUYyUWp0QlFVTkJMRVZCUVVFc2RVSkJRWFZDTEVOQlFVTXNRMEZCUXl4aFFVRkVMRVZCUVdkQ0xGbEJRV2hDTEVWQlFUaENMRmxCUVRsQ0xFVkJRVFJETEdGQlFUVkRMRVZCUVRKRUxHTkJRVE5FTEVWQlFUSkZMR1ZCUVRORkxFVkJRVFJHTEdOQlFUVkdMRU5CUVVRc1JVRkJPRWNzV1VGQk9VY3NRMEZCZGtJN1FVRkRRU3hGUVVGQkxFOUJRVThzUTBGQlF5eFpRVUZTTEVOQlFYRkNMRXRCUVhKQ0xFVkJRVFJDTEUxQlFUVkNPMEZCUTBFc1JVRkJRU3haUVVGWkxFTkJRVU1zVTBGQllpeHRRa0ZCYTBNc1NVRkJiRU03UVVGRFFTeEZRVUZCTEdGQlFXRXNRMEZCUXl4VFFVRmtMRWRCUVRCQ0xFdEJRVEZDTzBGQlEwRXNSVUZCUVN4WlFVRlpMRU5CUVVNc1UwRkJZaXh0UWtGQmEwTXNTVUZCYkVNN1FVRkRRU3hGUVVGQkxHRkJRV0VzUTBGQlF5eFRRVUZrTEc5Q1FVRnZReXhMUVVGd1F6dEJRVU5CTEVWQlFVRXNZMEZCWXl4RFFVRkRMRk5CUVdZc2NVSkJRWE5ETEUxQlFYUkRPMEZCUTBFc1JVRkJRU3hsUVVGbExFTkJRVU1zVTBGQmFFSXNjMEpCUVhkRExFOUJRWGhETzBGQlEwRXNSVUZCUVN4alFVRmpMRU5CUVVNc1UwRkJaaXg1UWtGQk1FTXNUVUZCTVVNN1FVRkRRVHM3UVVGRFJDeEpRVUZKTEVsQlFVa3NSMEZCUnl4RFFVRllPMEZCUTBFc1NVRkJTU3hMUVVGTExFZEJRVWNzUTBGQldqdEJRVU5CTEZOQlFWTXNRMEZCUXl4blFrRkJWaXhEUVVFeVFpeFBRVUV6UWl4RlFVRnZReXhWUVVGRExFTkJRVVFzUlVGQlR6dEJRVU14UXl4RlFVRkJMRWxCUVVrc1IwRkJSeXhEUVVGUU8wRkJRMEVzVFVGQlNTeEhRVUZITEhWRVFVRm5SQ3hUUVVGVExFTkJRVU1zUzBGQk1VUXNiVUpCUVhkRkxGRkJRVkVzUTBGQlF5eExRVUZxUml4dFFrRkJLMFlzU1VGQkwwWXNRMEZCVUR0QlFVTkJMRVZCUVVFc1EwRkJReXhEUVVGRExHTkJRVVk3UVVGRFFTeEZRVUZCTEZGQlFWRXNRMEZCUXl4VFFVRlVMRWRCUVhGQ0xFVkJRWEpDT3p0QlFVTkJMRTFCUVVrc1UwRkJVeXhEUVVGRExFdEJRV1FzUlVGQmNVSTdRVUZEY0VJc1NVRkJRU3hMUVVGTExFTkJRVU1zUjBGQlJDeERRVUZNTEVOQlEwTXNTVUZFUkN4RFFVTk5MRlZCUVVNc1VVRkJSQ3hGUVVGak8wRkJRMjVDTEZWQlFVa3NVVUZCVVN4RFFVRkRMRTFCUVZRc1MwRkJiMElzUjBGQmVFSXNSVUZCTmtJN1FVRkROVUlzVVVGQlFTeFBRVUZQTEVOQlFVTXNSMEZCVWl3eVEwRkJLME1zVVVGQlVTeERRVUZETEUxQlFYaEVPMEZCUTBFN1FVRkRRU3hQUVVoRUxFMUJSMDg3UVVGRFRpeFJRVUZCTEZGQlFWRXNRMEZCUXl4SlFVRlVMRWRCUTBNc1NVRkVSQ3hEUVVOTkxGVkJRVU1zU1VGQlJDeEZRVUZWTzBGQlEyWXNZMEZCU1N4SlFVRkpMRU5CUVVNc1VVRkJUQ3hMUVVGclFpeE5RVUYwUWl4RlFVRTRRanRCUVVNM1FpeFpRVUZCTEU5QlFVOHNRMEZCUXl4SFFVRlNMRU5CUVZrc1NVRkJXanRCUVVOQkxGbEJRVUVzUzBGQlN5eEhRVUZITEVsQlFVa3NRMEZCUXl4SlFVRk1MRU5CUVZVc1NVRkJTU3hEUVVGRExGbEJRVXdzUjBGQmEwSXNSVUZCTlVJc1EwRkJVanRCUVVOQkxGbEJRVUVzYjBKQlFXOUNMRU5CUVVNc1UwRkJja0lzWVVGQmIwTXNTVUZCY0VNc2FVSkJRU3RETEV0QlFTOURPMEZCUTBFc1dVRkJRU3hKUVVGSkxFTkJRVU1zVFVGQlRDeERRVUZaTEU5QlFWb3NRMEZCYjBJc1ZVRkJReXhQUVVGRU8wRkJRVUVzY1VKQlFXRXNVMEZCVXl4RFFVRkRMRTlCUVU4c1EwRkJReXhMUVVGVUxFVkJRV2RDTEU5QlFVOHNRMEZCUXl4SlFVRjRRaXhGUVVFNFFpeFBRVUZQTEVOQlFVTXNUVUZCZEVNc1EwRkJkRUk3UVVGQlFTeGhRVUZ3UWp0QlFVVkJMRmRCVGtRc1RVRk5UenRCUVVOT0xGbEJRVUVzVVVGQlVTeERRVUZETEZOQlFWUXNSMEZCY1VJc1NVRkJTU3hEUVVGRExFdEJRVEZDTzBGQlEwRTdRVUZGUkN4VFFWcEVPMEZCWVVFN1FVRkRSQ3hMUVhCQ1JDeFhRWEZDVHl4VlFVRkRMRWRCUVVRc1JVRkJVenRCUVVObUxFMUJRVUVzVDBGQlR5eERRVUZETEV0QlFWSXNRMEZCWXl4SFFVRmtPMEZCUlVFc1MwRjRRa1E3UVVGNVFrRTdRVUZEUkN4RFFXaERSRHRCUVdsRFFTeFJRVUZSTEVOQlFVTXNaMEpCUVZRc1EwRkJNRUlzVDBGQk1VSXNSVUZCYlVNc1ZVRkJReXhMUVVGRUxFVkJRVmM3UVVGRE4wTXNUVUZCU1N4TFFVRkxMRU5CUVVNc1RVRkJUaXhEUVVGaExGTkJRV0lzU1VGQk1FSXNjVUpCUVRsQ0xFVkJRWEZFTzBGQlEzQkVMRWxCUVVFc1NVRkJTU3hEUVVGRExGTkJRVXdzUjBGQmFVSXNUVUZCYWtJN1FVRkRRU3hSUVVGSkxFMUJRVTBzUjBGQlJ5eExRVUZMTEVOQlFVTXNUVUZCVGl4RFFVRmhMRmxCUVdJc1EwRkJNRUlzVTBGQk1VSXNRMEZCWWp0QlFVTkJMRkZCUVVrc1IwRkJSeXgxUkVGQlowUXNUVUZCYUVRc1EwRkJVRHRCUVVOQkxFbEJRVUVzUzBGQlN5eERRVUZETEVkQlFVUXNRMEZCVEN4RFFVTkRMRWxCUkVRc1EwRkRUU3hWUVVGRExGRkJRVVFzUlVGQll6dEJRVU51UWl4VlFVRkpMRkZCUVZFc1EwRkJReXhOUVVGVUxFdEJRVzlDTEVkQlFYaENMRVZCUVRaQ08wRkJRelZDTEZGQlFVRXNUMEZCVHl4RFFVRkRMRWRCUVZJc01rTkJRU3RETEZGQlFWRXNRMEZCUXl4TlFVRjRSRHRCUVVOQk8wRkJRMEVzVDBGSVJDeE5RVWRQTzBGQlEwNHNVVUZCUVN4UlFVRlJMRU5CUVVNc1NVRkJWQ3hIUVVORExFbEJSRVFzUTBGRFRTeFZRVUZETEVsQlFVUXNSVUZCVlR0QlFVTm1MR05CUVVrc1NVRkJTU3hEUVVGRExGRkJRVXdzUzBGQmEwSXNUVUZCZEVJc1JVRkJPRUk3UVVGRE4wSXNXVUZCUVN4UFFVRlBMRU5CUVVNc1NVRkJTU3hEUVVGRExFdEJRVTRzUlVGQllTeEpRVUZKTEVOQlFVTXNTVUZCYkVJc1JVRkJkMElzU1VGQlNTeERRVUZETEVsQlFUZENMRVZCUVcxRExFbEJRVWtzUTBGQlF5eE5RVUY0UXl4RlFVRm5SQ3hKUVVGSkxFTkJRVU1zUzBGQmNrUXNSVUZCTkVRc1NVRkJTU3hEUVVGRExFMUJRV3BGTEVWQlFYbEZMRWxCUVVrc1EwRkJReXhQUVVFNVJTeEZRVUYxUml4SlFVRkpMRU5CUVVNc1ZVRkJOVVlzUTBGQlVEdEJRVU5CTEZkQlJrUXNUVUZGVHp0QlFVTk9MRmxCUVVFc1VVRkJVU3hEUVVGRExGTkJRVlFzUjBGQmNVSXNTVUZCU1N4RFFVRkRMRXRCUVRGQ08wRkJRMEU3UVVGRlJDeFRRVkpFTzBGQlUwRTdRVUZEUkN4TFFXaENSQ3hYUVdsQ1R5eFZRVUZETEVkQlFVUXNSVUZCVXp0QlFVTm1MRTFCUVVFc1QwRkJUeXhEUVVGRExFdEJRVklzUTBGQll5eEhRVUZrTzBGQlJVRXNTMEZ3UWtRN1FVRnhRa0U3UVVGRFJDeERRVE5DUkR0QlFUWkNRU3hyUWtGQmEwSXNRMEZCUXl4blFrRkJia0lzUTBGQmIwTXNUMEZCY0VNc1JVRkJOa01zV1VGQlRUdEJRVU5zUkN4TlFVRkhMRWxCUVVrc1IwRkJSeXhEUVVGV0xFVkJRV0U3UVVGRFdpeEpRVUZCTEVsQlFVazdRVUZEU2l4SFFVWkVMRTFCUlU4N1FVRkRUaXhKUVVGQkxFbEJRVWtzUjBGQlJ5eERRVUZRTzBGQlEwRTdPMEZCUTBRc1RVRkJTU3hIUVVGSExIVkVRVUZuUkN4VFFVRlRMRU5CUVVNc1MwRkJNVVFzYlVKQlFYZEZMRkZCUVZFc1EwRkJReXhMUVVGcVJpeHRRa0ZCSzBZc1NVRkJMMFlzUTBGQlVEdEJRVU5CTEVWQlFVRXNVVUZCVVN4RFFVRkRMRk5CUVZRc1IwRkJjVUlzUlVGQmNrSTdPMEZCUTBFc1RVRkJTU3hUUVVGVExFTkJRVU1zUzBGQlpDeEZRVUZ4UWp0QlFVTndRaXhKUVVGQkxFdEJRVXNzUTBGQlF5eEhRVUZFTEVOQlFVd3NRMEZEUXl4SlFVUkVMRU5CUTAwc1ZVRkJReXhSUVVGRUxFVkJRV003UVVGRGJrSXNWVUZCU1N4UlFVRlJMRU5CUVVNc1RVRkJWQ3hMUVVGdlFpeEhRVUY0UWl4RlFVRTJRanRCUVVNMVFpeFJRVUZCTEU5QlFVOHNRMEZCUXl4SFFVRlNMREpEUVVFclF5eFJRVUZSTEVOQlFVTXNUVUZCZUVRN1FVRkRRVHRCUVVOQkxFOUJTRVFzVFVGSFR6dEJRVU5PTEZGQlFVRXNVVUZCVVN4RFFVRkRMRWxCUVZRc1IwRkRReXhKUVVSRUxFTkJRMDBzVlVGQlF5eEpRVUZFTEVWQlFWVTdRVUZEWml4alFVRkpMRWxCUVVrc1EwRkJReXhSUVVGTUxFdEJRV3RDTEUxQlFYUkNMRVZCUVRoQ08wRkJRemRDTEZsQlFVRXNUMEZCVHl4RFFVRkRMRWRCUVZJc1EwRkJXU3hKUVVGYU96dEJRVU5CTEdkQ1FVRkpMRTFCUVVzc1IwRkJSeXhKUVVGSkxFTkJRVU1zU1VGQlRDeERRVUZWTEVsQlFVa3NRMEZCUXl4WlFVRk1MRWRCUVd0Q0xFVkJRVFZDTEVOQlFWbzdPMEZCUTBFc1dVRkJRU3h2UWtGQmIwSXNRMEZCUXl4VFFVRnlRaXhoUVVGdlF5eEpRVUZ3UXl4cFFrRkJLME1zVFVGQkwwTTdRVUZEUVN4WlFVRkJMRWxCUVVrc1EwRkJReXhOUVVGTUxFTkJRVmtzVDBGQldpeERRVUZ2UWl4VlFVRkRMRTlCUVVRN1FVRkJRU3h4UWtGQllTeFRRVUZUTEVOQlFVTXNUMEZCVHl4RFFVRkRMRXRCUVZRc1JVRkJaMElzVDBGQlR5eERRVUZETEVsQlFYaENMRVZCUVRoQ0xFOUJRVThzUTBGQlF5eE5RVUYwUXl4RFFVRjBRanRCUVVGQkxHRkJRWEJDTzBGQlJVRXNWMEZPUkN4TlFVMVBPMEZCUTA0c1dVRkJRU3hSUVVGUkxFTkJRVU1zVTBGQlZDeEhRVUZ4UWl4SlFVRkpMRU5CUVVNc1MwRkJNVUk3UVVGRFFUdEJRVVZFTEZOQldrUTdRVUZoUVR0QlFVTkVMRXRCY0VKRUxGZEJjVUpQTEZWQlFVTXNSMEZCUkN4RlFVRlRPMEZCUTJZc1RVRkJRU3hQUVVGUExFTkJRVU1zUzBGQlVpeERRVUZqTEVkQlFXUTdRVUZGUVN4TFFYaENSRHRCUVhsQ1FUdEJRVU5FTEVOQmJrTkVPMEZCYjBOQkxHdENRVUZyUWl4RFFVRkRMR2RDUVVGdVFpeERRVUZ2UXl4UFFVRndReXhGUVVFMlF5eFpRVUZOTzBGQlEycEVMRTFCUVVrc1NVRkJTU3hIUVVGSExFdEJRVmdzUlVGQmEwSTdRVUZEYWtJc1NVRkJRU3hKUVVGSk8wRkJRMG9zUjBGR1JDeE5RVVZQTzBGQlEwNHNTVUZCUVN4SlFVRkpMRWRCUVVjc1MwRkJVRHRCUVVOQk96dEJRVU5HTEUxQlFVa3NSMEZCUnl4MVJFRkJaMFFzVTBGQlV5eERRVUZETEV0QlFURkVMRzFDUVVGM1JTeFJRVUZSTEVOQlFVTXNTMEZCYWtZc2JVSkJRU3RHTEVsQlFTOUdMRU5CUVZBN1FVRkRRU3hGUVVGQkxGRkJRVkVzUTBGQlF5eFRRVUZVTEVkQlFYRkNMRVZCUVhKQ096dEJRVU5CTEUxQlFVa3NVMEZCVXl4RFFVRkRMRXRCUVdRc1JVRkJjVUk3UVVGRGNFSXNTVUZCUVN4TFFVRkxMRU5CUVVNc1IwRkJSQ3hEUVVGTUxFTkJRME1zU1VGRVJDeERRVU5OTEZWQlFVTXNVVUZCUkN4RlFVRmpPMEZCUTI1Q0xGVkJRVWtzVVVGQlVTeERRVUZETEUxQlFWUXNTMEZCYjBJc1IwRkJlRUlzUlVGQk5rSTdRVUZETlVJc1VVRkJRU3hQUVVGUExFTkJRVU1zUjBGQlVpd3lRMEZCSzBNc1VVRkJVU3hEUVVGRExFMUJRWGhFTzBGQlEwRTdRVUZEUVN4UFFVaEVMRTFCUjA4N1FVRkRUaXhSUVVGQkxGRkJRVkVzUTBGQlF5eEpRVUZVTEVkQlEwTXNTVUZFUkN4RFFVTk5MRlZCUVVNc1NVRkJSQ3hGUVVGVk8wRkJRMllzWTBGQlNTeEpRVUZKTEVOQlFVTXNVVUZCVEN4TFFVRnJRaXhOUVVGMFFpeEZRVUU0UWp0QlFVTTNRaXhaUVVGQkxFOUJRVThzUTBGQlF5eEhRVUZTTEVOQlFWa3NTVUZCV2p0QlFVTkJMRmxCUVVFc1MwRkJTeXhIUVVGSExFbEJRVWtzUTBGQlF5eEpRVUZNTEVOQlFWVXNTVUZCU1N4RFFVRkRMRmxCUVV3c1IwRkJhMElzUlVGQk5VSXNRMEZCVWp0QlFVTkJMRmxCUVVFc2IwSkJRVzlDTEVOQlFVTXNVMEZCY2tJc1lVRkJiME1zU1VGQmNFTXNhVUpCUVN0RExFdEJRUzlETzBGQlEwRXNXVUZCUVN4SlFVRkpMRU5CUVVNc1RVRkJUQ3hEUVVGWkxFOUJRVm9zUTBGQmIwSXNWVUZCUXl4UFFVRkVPMEZCUVVFc2NVSkJRV0VzVTBGQlV5eERRVUZETEU5QlFVOHNRMEZCUXl4TFFVRlVMRVZCUVdkQ0xFOUJRVThzUTBGQlF5eEpRVUY0UWl4RlFVRTRRaXhQUVVGUExFTkJRVU1zVFVGQmRFTXNRMEZCZEVJN1FVRkJRU3hoUVVGd1FqdEJRVVZCTEZkQlRrUXNUVUZOVHp0QlFVTk9MRmxCUVVFc1VVRkJVU3hEUVVGRExGTkJRVlFzUjBGQmNVSXNTVUZCU1N4RFFVRkRMRXRCUVRGQ08wRkJRMEU3UVVGRlJDeFRRVnBFTzBGQllVRTdRVUZEUkN4TFFYQkNSQ3hYUVhGQ1R5eFZRVUZETEVkQlFVUXNSVUZCVXp0QlFVTm1MRTFCUVVFc1QwRkJUeXhEUVVGRExFdEJRVklzUTBGQll5eEhRVUZrTzBGQlJVRXNTMEY0UWtRN1FVRjVRa0U3UVVGRFJDeERRVzVEUkNJc0ltWnBiR1VpT2lKblpXNWxjbUYwWldRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lLR1oxYm1OMGFXOXVLQ2w3Wm5WdVkzUnBiMjRnY2lobExHNHNkQ2w3Wm5WdVkzUnBiMjRnYnlocExHWXBlMmxtS0NGdVcybGRLWHRwWmlnaFpWdHBYU2w3ZG1GeUlHTTlYQ0ptZFc1amRHbHZibHdpUFQxMGVYQmxiMllnY21WeGRXbHlaU1ltY21WeGRXbHlaVHRwWmlnaFppWW1ZeWx5WlhSMWNtNGdZeWhwTENFd0tUdHBaaWgxS1hKbGRIVnliaUIxS0drc0lUQXBPM1poY2lCaFBXNWxkeUJGY25KdmNpaGNJa05oYm01dmRDQm1hVzVrSUcxdlpIVnNaU0FuWENJcmFTdGNJaWRjSWlrN2RHaHliM2NnWVM1amIyUmxQVndpVFU5RVZVeEZYMDVQVkY5R1QxVk9SRndpTEdGOWRtRnlJSEE5Ymx0cFhUMTdaWGh3YjNKMGN6cDdmWDA3WlZ0cFhWc3dYUzVqWVd4c0tIQXVaWGh3YjNKMGN5eG1kVzVqZEdsdmJpaHlLWHQyWVhJZ2JqMWxXMmxkV3pGZFczSmRPM0psZEhWeWJpQnZLRzU4ZkhJcGZTeHdMSEF1Wlhod2IzSjBjeXh5TEdVc2JpeDBLWDF5WlhSMWNtNGdibHRwWFM1bGVIQnZjblJ6ZldadmNpaDJZWElnZFQxY0ltWjFibU4wYVc5dVhDSTlQWFI1Y0dWdlppQnlaWEYxYVhKbEppWnlaWEYxYVhKbExHazlNRHRwUEhRdWJHVnVaM1JvTzJrckt5bHZLSFJiYVYwcE8zSmxkSFZ5YmlCdmZYSmxkSFZ5YmlCeWZTa29LU0lzSW14bGRDQnRiM1pwWlhNZ1BTQmJYVHRjY2x4dVkyOXVjM1FnYzNWaWJXbDBRblJ1SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG1acGJHMWZYMlp2Y20wdGMzVmliV2wwSnlrN1hISmNibU52Ym5OMElHWnBiRzFVYVhSc1pTQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5Tm1hV3h0VkdsMGJHVW5LVHRjY2x4dVkyOXVjM1FnWm1sc2JWUjVjR1VnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2NqWm1sc2JWUjVjR1VuS1R0Y2NseHVZMjl1YzNRZ1ptbHNiVkJoWjJsdVlYUnBiMjVUZEdGMGRYTWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VabWxzYlY5ZmNHRm5hVzVoZEdsdmJpMXpkR0YwZFhNbktUdGNjbHh1WTI5dWMzUWdabWxzYlZCaFoybHVZWFJwYjI1UWNtVjJJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpZ25MbVpwYkcxZlgzQmhaMmx1WVhScGIyNHRjSEpsZGljcE8xeHlYRzVqYjI1emRDQm1hV3h0VUdGbmFXNWhkR2x2Yms1bGVIUWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VabWxzYlY5ZmNHRm5hVzVoZEdsdmJpMXVaWGgwSnlrN1hISmNibHh5WEc1amIyNXpkQ0JuWlc1bGNtRjBaVVZzWlcxbGJuUWdQU0FvZEdGblRtRnRaU3dnWTJ4aGMzTk9ZVzFsSUQwZ0p5Y3BJRDArSUh0Y2NseHVYSFJqYjI1emRDQmxiQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9kR0ZuVG1GdFpTazdYSEpjYmx4MGFXWWdLR05zWVhOelRtRnRaU2tnZTF4eVhHNWNkRngwWld3dVkyeGhjM05NYVhOMExtRmtaQ2hqYkdGemMwNWhiV1VwTzF4eVhHNWNkSDFjY2x4dVhISmNibHgwY21WMGRYSnVJR1ZzTzF4eVhHNTlYSEpjYmx4eVhHNWpiMjV6ZENCcGJuTmxjblJGYkdWdFpXNTBTVzUwYjFCaGNtVnVkQ0E5SUNobGJHVnRaVzUwY3l3Z2NHRnlaVzUwUld4bGJXVnVkQ2tnUFQ0Z2UxeHlYRzVjZEdWc1pXMWxiblJ6TG1admNrVmhZMmdvWld4bGJXVnVkQ0E5UGlCN1hISmNibHgwWEhSd1lYSmxiblJGYkdWdFpXNTBMbUZ3Y0dWdVpFTm9hV3hrS0dWc1pXMWxiblFwTzF4eVhHNWNkSDBwWEhKY2JuMWNjbHh1WTI5dWMzUWdhVzVtYnlBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvSnk1cGJtWnZKeWs3WEhKY2JtTnZibk4wSUdacGJHMU1hWE4wSUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduSTJacGJHMU1hWE4wSnlrN1hISmNibVoxYm1OMGFXOXVJR0ZrWkUxdmRtbGxjeWgwYVhSc1pTd2dkSGx3WlN3Z2FXUXBJSHRjY2x4dVhIUmpiMjV6ZENCbWFXeHRUR2x6ZEVsMFpXMGdQU0JuWlc1bGNtRjBaVVZzWlcxbGJuUW9KMnhwSnl3Z0oyWnBiRzFmWDJ4cGMzUXRhWFJsYlNjcE8xeHlYRzVjZEdOdmJuTjBJR1pwYkcxTWFYTjBTVzV1WlhJZ1BTQm5aVzVsY21GMFpVVnNaVzFsYm5Rb0oyUnBkaWNzSUNkbWFXeHRYMTlzYVhOMExXbHVibVZ5SnlrN1hISmNibHgwWTI5dWMzUWdabWxzYlV4cGMzUlVhWFJzWlNBOUlHZGxibVZ5WVhSbFJXeGxiV1Z1ZENnbmFETW5MQ0FuWm1sc2JWOWZiR2x6ZEMxcGRHVnRMWFJwZEd4bEp5azdYSEpjYmx4MFkyOXVjM1FnWm1sc2JVeHBjM1JVWlhoMElEMGdaMlZ1WlhKaGRHVkZiR1Z0Wlc1MEtDZHdKeXdnSjJacGJHMWZYMnhwYzNRdGFYUmxiUzEwWlhoMEp5azdYSEpjYmx4MFkyOXVjM1FnWm1sc2JVeHBjM1JDZEc0Z1BTQm5aVzVsY21GMFpVVnNaVzFsYm5Rb0oySjFkSFJ2Ymljc0lDZG1hV3h0WDE5c2FYTjBMV2wwWlcwdFluUnVKeWs3WEhKY2JseDBabWxzYlV4cGMzUXVZWEJ3Wlc1a0tHWnBiRzFNYVhOMFNYUmxiU2s3WEhKY2JseDBabWxzYlV4cGMzUkpkR1Z0TG1Gd2NHVnVaQ2htYVd4dFRHbHpkRWx1Ym1WeUtUdGNjbHh1WEhSbWFXeHRUR2x6ZEVKMGJpNXpaWFJCZEhSeWFXSjFkR1VvSjJSaGRHRXRhV1FuTENCcFpDazdYSEpjYmx4MFptbHNiVXhwYzNSQ2RHNHVhVzV1WlhKSVZFMU1JRDBnSjJSbGRHRnBiSE1uTzF4eVhHNWNkR2x1YzJWeWRFVnNaVzFsYm5SSmJuUnZVR0Z5Wlc1MEtGdG1hV3h0VEdsemRGUnBkR3hsTENCbWFXeHRUR2x6ZEZSbGVIUXNJR1pwYkcxTWFYTjBRblJ1WFN3Z1ptbHNiVXhwYzNSSmJtNWxjaWs3WEhKY2JseDBabWxzYlV4cGMzUlVhWFJzWlM1cGJtNWxja2hVVFV3Z1BTQjBhWFJzWlR0Y2NseHVYSFJtYVd4dFRHbHpkRlJsZUhRdWFXNXVaWEpJVkUxTUlEMGdkSGx3WlR0Y2NseHVmVnh5WEc1Y2NseHVablZ1WTNScGIyNGdZV1JrU1c1bWJ5aDBhWFJzWlN3Z2RIbHdaU3dnZVdWaGNpd2djRzl6ZEdWeUxDQm5aVzV5WlN3Z1lXTjBiM0p6TENCamIzVnVkSEo1TENCeVlYUnBibWNwSUh0Y2NseHVYSFJqYjI1emRDQm1hV3h0U1c1bWJ5QTlJR2RsYm1WeVlYUmxSV3hsYldWdWRDZ25aR2wySnl3Z0oyWnBiRzFmWDJsdVptOG5LVHRjY2x4dVhIUmpiMjV6ZENCbWFXeHRTVzVtYjBsdFoxZHlZWEFnUFNCblpXNWxjbUYwWlVWc1pXMWxiblFvSjJScGRpY3NJQ2RtYVd4dFgxOXBibVp2TFdsdFp5MTNjbUZ3SnlrN1hISmNibHgwWTI5dWMzUWdabWxzYlVsdVptOVhjbUZ3SUQwZ1oyVnVaWEpoZEdWRmJHVnRaVzUwS0Nka2FYWW5MQ0FuWm1sc2JWOWZhVzVtYnkxM2NtRndKeWs3WEhKY2JseDBZMjl1YzNRZ1ptbHNiVWx0WnlBOUlHZGxibVZ5WVhSbFJXeGxiV1Z1ZENnbmFXMW5KeXdnSjJacGJHMWZYMmx1Wm04dGFXMW5KeWs3WEhKY2JseDBZMjl1YzNRZ1ptbHNiVWx1Wm05VWVYQmxJRDBnWjJWdVpYSmhkR1ZGYkdWdFpXNTBLQ2R3Snl3Z0oyWnBiRzFmWDJsdVptOHRkSGx3WlNjcE8xeHlYRzVjZEdOdmJuTjBJR1pwYkcxSmJtWnZSMlZ1Y21VZ1BTQm5aVzVsY21GMFpVVnNaVzFsYm5Rb0ozQW5MQ0FuWm1sc2JWOWZhVzVtYnkxblpXNXlaU2NwTzF4eVhHNWNkR052Ym5OMElHWnBiRzFKYm1adlFXTjBiM0p6SUQwZ1oyVnVaWEpoZEdWRmJHVnRaVzUwS0Nkd0p5d2dKMlpwYkcxZlgybHVabTh0WVdOMGIzSnpKeWs3WEhKY2JseDBZMjl1YzNRZ1ptbHNiVWx1Wm05RGIzVnVkSEo1SUQwZ1oyVnVaWEpoZEdWRmJHVnRaVzUwS0Nkd0p5d2dKMlpwYkcxZlgybHVabTh0WTI5MWJuUnllU2NwTzF4eVhHNWNkR052Ym5OMElHWnBiRzFKYm1adlVtRjBhVzVuSUQwZ1oyVnVaWEpoZEdWRmJHVnRaVzUwS0Nkd0p5d2dKMlpwYkcxZlgybHVabTh0Y21GMGFXNW5KeWs3WEhKY2JseDBZMjl1YzNRZ1ptbHNiVWx1Wm05VWFYUnNaU0E5SUdkbGJtVnlZWFJsUld4bGJXVnVkQ2duYURNbkxDQW5abWxzYlY5ZmFXNW1ieTEwYVhSc1pTY3BPMXh5WEc1Y2RHTnZibk4wSUdacGJHMUpibVp2V1dWaGNpQTlJR2RsYm1WeVlYUmxSV3hsYldWdWRDZ25hRFFuTENBblptbHNiVjlmYVc1bWJ5MTVaV0Z5SnlrN1hISmNibHgwWm1sc2JVbHVabTlKYldkWGNtRndMbUZ3Y0dWdVpDaG1hV3h0U1cxbktUdGNjbHh1WEhScGJtWnZMbUZ3Y0dWdVpDaG1hV3h0U1c1bWJ5azdYSEpjYmx4MGFXNXpaWEowUld4bGJXVnVkRWx1ZEc5UVlYSmxiblFvVzJacGJHMUpibVp2U1cxblYzSmhjQ3dnWm1sc2JVbHVabTlYY21Gd1hTd2dabWxzYlVsdVptOHBPMXh5WEc1Y2RHbHVjMlZ5ZEVWc1pXMWxiblJKYm5SdlVHRnlaVzUwS0Z0bWFXeHRTVzVtYjFScGRHeGxMQ0JtYVd4dFNXNW1iMWxsWVhJc0lHWnBiRzFKYm1adlZIbHdaU3dnWm1sc2JVbHVabTlIWlc1eVpTd2dabWxzYlVsdVptOUJZM1J2Y25Nc0lHWnBiRzFKYm1adlEyOTFiblJ5ZVN3Z1ptbHNiVWx1Wm05U1lYUnBibWRkTENCbWFXeHRTVzVtYjFkeVlYQXBPMXh5WEc1Y2RHWnBiRzFKYldjdWMyVjBRWFIwY21saWRYUmxLQ2R6Y21NbkxDQndiM04wWlhJcE8xeHlYRzVjZEdacGJHMUpibVp2Vkhsd1pTNXBibTVsY2toVVRVd2dQU0JnVkhsd1pUb2dKSHQwZVhCbGZXQTdYSEpjYmx4MFptbHNiVWx1Wm05VWFYUnNaUzVwYm01bGNraFVUVXdnUFNCMGFYUnNaVHRjY2x4dVhIUm1hV3h0U1c1bWIxbGxZWEl1YVc1dVpYSklWRTFNSUQwZ1lGbGxZWEk2SUNSN2VXVmhjbjFnTzF4eVhHNWNkR1pwYkcxSmJtWnZSMlZ1Y21VdWFXNXVaWEpJVkUxTUlEMGdZRWRsYm5KbE9pQWtlMmRsYm5KbGZXQTdYSEpjYmx4MFptbHNiVWx1Wm05QlkzUnZjbk11YVc1dVpYSklWRTFNSUQwZ1lFRmpkRzl5Y3pvZ0pIdGhZM1J2Y25OOVlEdGNjbHh1WEhSbWFXeHRTVzVtYjBOdmRXNTBjbmt1YVc1dVpYSklWRTFNSUQwZ1lFTnZkVzUwY25rNklDUjdZMjkxYm5SeWVYMWdPMXh5WEc1Y2RHWnBiRzFKYm1adlVtRjBhVzVuTG1sdWJtVnlTRlJOVENBOUlHQkpUVVJDVW1GMGFXNW5PaUFrZTNKaGRHbHVaMzFnTzF4eVhHNTlYSEpjYm14bGRDQndZV2RsSUQwZ01UdGNjbHh1YkdWMElIQmhaMlZ6SUQwZ01UdGNjbHh1YzNWaWJXbDBRblJ1TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnS0dVcElEMCtJSHRjY2x4dVhIUndZV2RsSUQwZ01UdGNjbHh1WEhSc1pYUWdkWEpzSUQwZ1lHaDBkSEE2THk5M2QzY3ViMjFrWW1Gd2FTNWpiMjB2UDJGd2FXdGxlVDB5WVRKak5UQXlNU1p6UFNSN1ptbHNiVlJwZEd4bExuWmhiSFZsZlNaMGVYQmxQU1I3Wm1sc2JWUjVjR1V1ZG1Gc2RXVjlKbkJoWjJVOUpIdHdZV2RsZldBN1hISmNibHgwWlM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwTzF4eVhHNWNkR1pwYkcxTWFYTjBMbWx1Ym1WeVNGUk5UQ0E5SUNjbk8xeHlYRzVjZEdsbUlDaG1hV3h0VkdsMGJHVXVkbUZzZFdVcElIdGNjbHh1WEhSY2RHWmxkR05vS0hWeWJDbGNjbHh1WEhSY2RDNTBhR1Z1S0NoeVpYTndiMjV6WlNrZ1BUNGdlMXh5WEc1Y2RGeDBYSFJwWmlBb2NtVnpjRzl1YzJVdWMzUmhkSFZ6SUNFOVBTQXlNREFwSUh0Y2NseHVYSFJjZEZ4MFhIUmpiMjV6YjJ4bExteHZaeWhnVjJVZ2FHRjJaU0JoSUhCeWIySnNaVzB1SUZOMFlYUjFjeUJEYjJSbE9pQWtlM0psYzNCdmJuTmxMbk4wWVhSMWMzMWdLVHRjY2x4dVhIUmNkRngwWEhSeVpYUjFjbTQ3WEhKY2JseDBYSFJjZEgwZ1pXeHpaU0I3WEhKY2JseDBYSFJjZEZ4MGNtVnpjRzl1YzJVdWFuTnZiaWdwWEhKY2JseDBYSFJjZEZ4MExuUm9aVzRvS0dSaGRHRXBJRDArSUh0Y2NseHVYSFJjZEZ4MFhIUmNkR2xtSUNoa1lYUmhMbEpsYzNCdmJuTmxJRDA5UFNBblZISjFaU2NwSUh0Y2NseHVYSFJjZEZ4MFhIUmNkRngwWTI5dWMyOXNaUzVzYjJjb1pHRjBZU2s3WEhKY2JseDBYSFJjZEZ4MFhIUmNkSEJoWjJWeklEMGdUV0YwYUM1alpXbHNLR1JoZEdFdWRHOTBZV3hTWlhOMWJIUnpMekV3S1R0Y2NseHVYSFJjZEZ4MFhIUmNkRngwWm1sc2JWQmhaMmx1WVhScGIyNVRkR0YwZFhNdWFXNXVaWEpJVkUxTUlEMGdZQ1I3Y0dGblpYMGdiMllnSkh0d1lXZGxjMzFnTzF4eVhHNWNkRngwWEhSY2RGeDBYSFJrWVhSaExsTmxZWEpqYUM1bWIzSkZZV05vS0NobGJHVnRaVzUwS1NBOVBpQmhaR1JOYjNacFpYTW9aV3hsYldWdWRDNVVhWFJzWlN3Z1pXeGxiV1Z1ZEM1VWVYQmxMQ0JsYkdWdFpXNTBMbWx0WkdKSlJDa3BPMXh5WEc1Y2NseHVYSFJjZEZ4MFhIUmNkSDBnWld4elpTQjdYSEpjYmx4MFhIUmNkRngwWEhSY2RHWnBiRzFNYVhOMExtbHVibVZ5U0ZSTlRDQTlJR1JoZEdFdVJYSnliM0k3WEhKY2JseDBYSFJjZEZ4MFhIUjlYSEpjYmx4eVhHNWNkRngwWEhSY2RIMHBYSEpjYmx4MFhIUmNkSDFjY2x4dVhIUmNkSDBwWEhKY2JseDBYSFF1WTJGMFkyZ29LR1Z5Y2lrZ1BUNGdlMXh5WEc1Y2RGeDBYSFJqYjI1emIyeGxMbVZ5Y205eUtHVnljaWs3WEhKY2JseHlYRzVjZEZ4MGZTbGNjbHh1WEhSOVhISmNibjBwTzF4eVhHNW1hV3h0VEdsemRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZGpiR2xqYXljc0lDaGxkbVZ1ZENrZ1BUNGdlMXh5WEc1Y2RHbG1JQ2hsZG1WdWRDNTBZWEpuWlhRdVkyeGhjM05PWVcxbElEMDlJQ2RtYVd4dFgxOXNhWE4wTFdsMFpXMHRZblJ1SnlrZ2UxeHlYRzVjZEZ4MGFXNW1ieTVwYm01bGNraFVUVXdnUFNCdGIzWnBaWE03WEhKY2JseDBYSFJzWlhRZ1ptbHNiVWxrSUQwZ1pYWmxiblF1ZEdGeVoyVjBMbWRsZEVGMGRISnBZblYwWlNnblpHRjBZUzFwWkNjcE8xeHlYRzVjZEZ4MGJHVjBJSFZ5YkNBOUlHQm9kSFJ3T2k4dmQzZDNMbTl0WkdKaGNHa3VZMjl0THo5aGNHbHJaWGs5TW1FeVl6VXdNakVtYVQwa2UyWnBiRzFKWkgxZ08xeHlYRzVjZEZ4MFptVjBZMmdvZFhKc0tWeHlYRzVjZEZ4MExuUm9aVzRvS0hKbGMzQnZibk5sS1NBOVBpQjdYSEpjYmx4MFhIUmNkR2xtSUNoeVpYTndiMjV6WlM1emRHRjBkWE1nSVQwOUlESXdNQ2tnZTF4eVhHNWNkRngwWEhSY2RHTnZibk52YkdVdWJHOW5LR0JYWlNCb1lYWmxJR0VnY0hKdllteGxiUzRnVTNSaGRIVnpJRU52WkdVNklDUjdjbVZ6Y0c5dWMyVXVjM1JoZEhWemZXQXBPMXh5WEc1Y2RGeDBYSFJjZEhKbGRIVnlianRjY2x4dVhIUmNkRngwZlNCbGJITmxJSHRjY2x4dVhIUmNkRngwWEhSeVpYTndiMjV6WlM1cWMyOXVLQ2xjY2x4dVhIUmNkRngwWEhRdWRHaGxiaWdvWkdGMFlTa2dQVDRnZTF4eVhHNWNkRngwWEhSY2RGeDBhV1lnS0dSaGRHRXVVbVZ6Y0c5dWMyVWdQVDA5SUNkVWNuVmxKeWtnZTF4eVhHNWNkRngwWEhSY2RGeDBYSFJoWkdSSmJtWnZLR1JoZEdFdVZHbDBiR1VzSUdSaGRHRXVWSGx3WlN3Z1pHRjBZUzVaWldGeUxDQmtZWFJoTGxCdmMzUmxjaXdnWkdGMFlTNUhaVzV5WlN3Z1pHRjBZUzVCWTNSdmNuTXNJR1JoZEdFdVEyOTFiblJ5ZVN3Z1pHRjBZUzVwYldSaVVtRjBhVzVuS1R0Y2NseHVYSFJjZEZ4MFhIUmNkSDBnWld4elpTQjdYSEpjYmx4MFhIUmNkRngwWEhSY2RHWnBiRzFNYVhOMExtbHVibVZ5U0ZSTlRDQTlJR1JoZEdFdVJYSnliM0k3WEhKY2JseDBYSFJjZEZ4MFhIUjlYSEpjYmx4eVhHNWNkRngwWEhSY2RIMHBYSEpjYmx4MFhIUmNkSDFjY2x4dVhIUmNkSDBwWEhKY2JseDBYSFF1WTJGMFkyZ29LR1Z5Y2lrZ1BUNGdlMXh5WEc1Y2RGeDBYSFJqYjI1emIyeGxMbVZ5Y205eUtHVnljaWs3WEhKY2JseHlYRzVjZEZ4MGZTbGNjbHh1WEhSOVhISmNibjBwTzF4eVhHNWNjbHh1Wm1sc2JWQmhaMmx1WVhScGIyNVFjbVYyTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdnS0NrZ1BUNGdlMXh5WEc1Y2RHbG1LSEJoWjJVZ1BpQXhLU0I3WEhKY2JseDBYSFJ3WVdkbExTMDdYSEpjYmx4MGZTQmxiSE5sSUh0Y2NseHVYSFJjZEhCaFoyVWdQU0F4TzF4eVhHNWNkSDFjY2x4dVhIUnNaWFFnZFhKc0lEMGdZR2gwZEhBNkx5OTNkM2N1YjIxa1ltRndhUzVqYjIwdlAyRndhV3RsZVQweVlUSmpOVEF5TVNaelBTUjdabWxzYlZScGRHeGxMblpoYkhWbGZTWjBlWEJsUFNSN1ptbHNiVlI1Y0dVdWRtRnNkV1Y5Sm5CaFoyVTlKSHR3WVdkbGZXQTdYSEpjYmx4MFptbHNiVXhwYzNRdWFXNXVaWEpJVkUxTUlEMGdKeWM3WEhKY2JseDBhV1lnS0dacGJHMVVhWFJzWlM1MllXeDFaU2tnZTF4eVhHNWNkRngwWm1WMFkyZ29kWEpzS1Z4eVhHNWNkRngwTG5Sb1pXNG9LSEpsYzNCdmJuTmxLU0E5UGlCN1hISmNibHgwWEhSY2RHbG1JQ2h5WlhOd2IyNXpaUzV6ZEdGMGRYTWdJVDA5SURJd01Da2dlMXh5WEc1Y2RGeDBYSFJjZEdOdmJuTnZiR1V1Ykc5bktHQlhaU0JvWVhabElHRWdjSEp2WW14bGJTNGdVM1JoZEhWeklFTnZaR1U2SUNSN2NtVnpjRzl1YzJVdWMzUmhkSFZ6ZldBcE8xeHlYRzVjZEZ4MFhIUmNkSEpsZEhWeWJqdGNjbHh1WEhSY2RGeDBmU0JsYkhObElIdGNjbHh1WEhSY2RGeDBYSFJ5WlhOd2IyNXpaUzVxYzI5dUtDbGNjbHh1WEhSY2RGeDBYSFF1ZEdobGJpZ29aR0YwWVNrZ1BUNGdlMXh5WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLR1JoZEdFdVVtVnpjRzl1YzJVZ1BUMDlJQ2RVY25WbEp5a2dlMXh5WEc1Y2RGeDBYSFJjZEZ4MFhIUmpiMjV6YjJ4bExteHZaeWhrWVhSaEtUdGNjbHh1WEhSY2RGeDBYSFJjZEZ4MGJHVjBJSEJoWjJWeklEMGdUV0YwYUM1alpXbHNLR1JoZEdFdWRHOTBZV3hTWlhOMWJIUnpMekV3S1R0Y2NseHVYSFJjZEZ4MFhIUmNkRngwWm1sc2JWQmhaMmx1WVhScGIyNVRkR0YwZFhNdWFXNXVaWEpJVkUxTUlEMGdZQ1I3Y0dGblpYMGdiMllnSkh0d1lXZGxjMzFnTzF4eVhHNWNkRngwWEhSY2RGeDBYSFJrWVhSaExsTmxZWEpqYUM1bWIzSkZZV05vS0NobGJHVnRaVzUwS1NBOVBpQmhaR1JOYjNacFpYTW9aV3hsYldWdWRDNVVhWFJzWlN3Z1pXeGxiV1Z1ZEM1VWVYQmxMQ0JsYkdWdFpXNTBMbWx0WkdKSlJDa3BPMXh5WEc1Y2NseHVYSFJjZEZ4MFhIUmNkSDBnWld4elpTQjdYSEpjYmx4MFhIUmNkRngwWEhSY2RHWnBiRzFNYVhOMExtbHVibVZ5U0ZSTlRDQTlJR1JoZEdFdVJYSnliM0k3WEhKY2JseDBYSFJjZEZ4MFhIUjlYSEpjYmx4eVhHNWNkRngwWEhSY2RIMHBYSEpjYmx4MFhIUmNkSDFjY2x4dVhIUmNkSDBwWEhKY2JseDBYSFF1WTJGMFkyZ29LR1Z5Y2lrZ1BUNGdlMXh5WEc1Y2RGeDBYSFJqYjI1emIyeGxMbVZ5Y205eUtHVnljaWs3WEhKY2JseHlYRzVjZEZ4MGZTbGNjbHh1WEhSOVhISmNibjBwTzF4eVhHNW1hV3h0VUdGbmFXNWhkR2x2Yms1bGVIUXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ25ZMnhwWTJzbkxDQW9LU0E5UGlCN1hISmNibHgwWEhScFppQW9jR0ZuWlNBOElIQmhaMlZ6S1NCN1hISmNibHgwWEhSY2RIQmhaMlVyS3p0Y2NseHVYSFJjZEgwZ1pXeHpaU0I3WEhKY2JseDBYSFJjZEhCaFoyVWdQU0J3WVdkbGN6dGNjbHh1WEhSY2RIMWNjbHh1WEhSc1pYUWdkWEpzSUQwZ1lHaDBkSEE2THk5M2QzY3ViMjFrWW1Gd2FTNWpiMjB2UDJGd2FXdGxlVDB5WVRKak5UQXlNU1p6UFNSN1ptbHNiVlJwZEd4bExuWmhiSFZsZlNaMGVYQmxQU1I3Wm1sc2JWUjVjR1V1ZG1Gc2RXVjlKbkJoWjJVOUpIdHdZV2RsZldBN1hISmNibHgwWm1sc2JVeHBjM1F1YVc1dVpYSklWRTFNSUQwZ0p5YzdYSEpjYmx4MGFXWWdLR1pwYkcxVWFYUnNaUzUyWVd4MVpTa2dlMXh5WEc1Y2RGeDBabVYwWTJnb2RYSnNLVnh5WEc1Y2RGeDBMblJvWlc0b0tISmxjM0J2Ym5ObEtTQTlQaUI3WEhKY2JseDBYSFJjZEdsbUlDaHlaWE53YjI1elpTNXpkR0YwZFhNZ0lUMDlJREl3TUNrZ2UxeHlYRzVjZEZ4MFhIUmNkR052Ym5OdmJHVXViRzluS0dCWFpTQm9ZWFpsSUdFZ2NISnZZbXhsYlM0Z1UzUmhkSFZ6SUVOdlpHVTZJQ1I3Y21WemNHOXVjMlV1YzNSaGRIVnpmV0FwTzF4eVhHNWNkRngwWEhSY2RISmxkSFZ5Ymp0Y2NseHVYSFJjZEZ4MGZTQmxiSE5sSUh0Y2NseHVYSFJjZEZ4MFhIUnlaWE53YjI1elpTNXFjMjl1S0NsY2NseHVYSFJjZEZ4MFhIUXVkR2hsYmlnb1pHRjBZU2tnUFQ0Z2UxeHlYRzVjZEZ4MFhIUmNkRngwYVdZZ0tHUmhkR0V1VW1WemNHOXVjMlVnUFQwOUlDZFVjblZsSnlrZ2UxeHlYRzVjZEZ4MFhIUmNkRngwWEhSamIyNXpiMnhsTG14dlp5aGtZWFJoS1R0Y2NseHVYSFJjZEZ4MFhIUmNkRngwY0dGblpYTWdQU0JOWVhSb0xtTmxhV3dvWkdGMFlTNTBiM1JoYkZKbGMzVnNkSE12TVRBcE8xeHlYRzVjZEZ4MFhIUmNkRngwWEhSbWFXeHRVR0ZuYVc1aGRHbHZibE4wWVhSMWN5NXBibTVsY2toVVRVd2dQU0JnSkh0d1lXZGxmU0J2WmlBa2UzQmhaMlZ6ZldBN1hISmNibHgwWEhSY2RGeDBYSFJjZEdSaGRHRXVVMlZoY21Ob0xtWnZja1ZoWTJnb0tHVnNaVzFsYm5RcElEMCtJR0ZrWkUxdmRtbGxjeWhsYkdWdFpXNTBMbFJwZEd4bExDQmxiR1Z0Wlc1MExsUjVjR1VzSUdWc1pXMWxiblF1YVcxa1lrbEVLU2s3WEhKY2JseHlYRzVjZEZ4MFhIUmNkRngwZlNCbGJITmxJSHRjY2x4dVhIUmNkRngwWEhSY2RGeDBabWxzYlV4cGMzUXVhVzV1WlhKSVZFMU1JRDBnWkdGMFlTNUZjbkp2Y2p0Y2NseHVYSFJjZEZ4MFhIUmNkSDFjY2x4dVhISmNibHgwWEhSY2RGeDBmU2xjY2x4dVhIUmNkRngwZlZ4eVhHNWNkRngwZlNsY2NseHVYSFJjZEM1allYUmphQ2dvWlhKeUtTQTlQaUI3WEhKY2JseDBYSFJjZEdOdmJuTnZiR1V1WlhKeWIzSW9aWEp5S1R0Y2NseHVYSEpjYmx4MFhIUjlLVnh5WEc1Y2RIMWNjbHh1ZlNrN1hISmNibHh5WEc0aVhYMD0ifQ==
