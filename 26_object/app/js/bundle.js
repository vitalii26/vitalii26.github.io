(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var car = {
  manufacturer: 'Ford',
  model: 'Kuga',
  year: 2013,
  'average speed': 100,
  show: function show() {
    return "\u0410\u0432\u0442\u043E\u043C\u043E\u0431\u0438\u043B\u044C: ".concat(this.manufacturer, ", \u043C\u043E\u0434\u0435\u043B\u044C: ").concat(this.model, ", \u0433\u043E\u0434 \u0432\u044B\u043F\u0443\u0441\u043A\u0430: ").concat(this.year, ", \u0441\u0440\u0435\u0434\u043D\u044F\u044F \u0441\u043A\u043E\u0440\u043E\u0441\u0442\u044C: ").concat(this['average speed'], " \u043A\u043C/\u0447\u0430\u0441");
  },
  time: function time() {
    var pause = 0;

    if (isNaN(this.distance)) {
      return 'введите число';
    }

    var time = this.distance / this['average speed'] + pause;

    if (time > 4 && time % 4 !== 0) {
      pause = Math.floor(time / 4);
      return time += pause;
    } else if (time > 4 && time % 4 == 0) {
      pause = Math.floor(time / 4) - 1;
      return time += pause;
    } else {
      return time;
    }
  }
};
var carBtn = document.querySelector('#car__button');
carBtn.addEventListener('click', function () {
  car.distance = document.querySelector('#distance').value;
  document.querySelector('#car__out').textContent = "\u0412\u0440\u0435\u043C\u044F \u0432 \u043F\u0443\u0442\u0438: ".concat(car.time());
});
var carInfoBtn = document.querySelector('#car-info__button');
carInfoBtn.addEventListener('click', function () {
  document.querySelector('#car__out').textContent = car.show();
}); // ==================2=================

var fraction1 = {};
var fraction2 = {};

function reduce(numerator, denominator) {
  if (isNaN(fraction1.numerator) || isNaN(fraction1.denominator) || isNaN(fraction2.numerator) || isNaN(fraction2.denominator)) {
    return "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043B\u043E";
  }

  var gcd = function gcd(a, b) {
    return b ? gcd(b, a % b) : a;
  };

  gcd = gcd(numerator, denominator);
  return "".concat(numerator / gcd, "/").concat(denominator / gcd);
}

function multiply(num1, den1, num2, den2) {
  return reduce(num1 * num2, den1 * den2);
}

function division(num1, den1, num2, den2) {
  return reduce(num1 * den2, den1 * num2);
}

function add(num1, den1, num2, den2) {
  var newden = den1 * den2;
  var newnum = num1 * den2 + num2 * den1;

  if (newnum == 0) {
    return 0;
  } else if (newnum == newden) {
    return 1;
  }

  return reduce(newnum, newden);
}

function substract(num1, den1, num2, den2) {
  var newden = den1 * den2;
  var newnum = num1 * den2 - num2 * den1;

  if (newnum == 0) {
    return 0;
  } else if (newnum == newden) {
    return 1;
  }

  return reduce(newnum, newden);
}

var fracBtn = document.querySelector('#fraction__button');
fracBtn.addEventListener('click', function () {
  fraction1.numerator = document.querySelector('#numerator1').value;
  fraction1.denominator = document.querySelector('#denominator1').value;
  fraction2.numerator = document.querySelector('#numerator2').value;
  fraction2.denominator = document.querySelector('#denominator2').value;
  var operator = document.querySelector('#operator').value;
  var fractionOut = 0;

  switch (operator) {
    case '+':
      fractionOut = add(fraction1.numerator, fraction1.denominator, fraction2.numerator, fraction2.denominator);
      break;

    case '-':
      fractionOut = substract(fraction1.numerator, fraction1.denominator, fraction2.numerator, fraction2.denominator);
      break;

    case '*':
      fractionOut = multiply(fraction1.numerator, fraction1.denominator, fraction2.numerator, fraction2.denominator);
      break;

    case '/':
      fractionOut = division(fraction1.numerator, fraction1.denominator, fraction2.numerator, fraction2.denominator);
      break;

    default:
      alert("Не корректная операция");
  }

  document.querySelector('#fraction__out').textContent = "\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0432\u044B\u0447\u0438\u0441\u043B\u0435\u043D\u0438\u0439: ".concat(fractionOut, ".");
});
var reduceBtn = document.querySelector('#reduce__button');
reduceBtn.addEventListener('click', function () {
  fraction1.numerator = document.querySelector('#numerator1').value;
  fraction1.denominator = document.querySelector('#denominator1').value;
  fraction2.numerator = document.querySelector('#numerator2').value;
  fraction2.denominator = document.querySelector('#denominator2').value;
  document.querySelector('#fraction__out').textContent = "\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442: ".concat(reduce(fraction1.numerator, fraction1.denominator), ", ").concat(reduce(fraction2.numerator, fraction2.denominator), ".");
}); // ==================3=================

var time = {
  hours: 12,
  minutes: '05',
  seconds: '05',
  show: function show() {
    return "".concat(this.hours, ":").concat(this.minutes, ":").concat(this.seconds);
  }
};

function secondsAdd(sec) {
  if (isNaN(sec)) {
    return 'введите число';
  }

  var secSum = +time.seconds + +sec;

  if (secSum < 10) {
    time.seconds = '0' + secSum;
  } else if (secSum == 60) {
    time.seconds = '00';
    var minSum = +time.minutes + Math.floor(secSum / 60);

    if (minSum < 10) {
      time.minutes = '0' + minSum;
    } else {
      time.minutes = minSum;
    }
  } else if (secSum > 60) {
    if (secSum % 60 < 10) {
      time.seconds = '0' + secSum % 60;
    } else if (secSum % 60 >= 10) {
      time.seconds = secSum % 60;
    }

    var _minSum = +time.minutes + Math.floor(secSum / 60);

    if (_minSum < 10) {
      time.minutes = '0' + _minSum;
    } else {
      time.minutes = _minSum;
    }
  } else {
    time.seconds = secSum;
  }

  return time.show();
}

function minutesAdd(min) {
  if (isNaN(min)) {
    return 'введите число';
  }

  var minSum = +time.minutes + +min;

  if (minSum < 10) {
    time.minutes = '0' + minSum;
  } else if (minSum == 60) {
    time.minutes = '00';
    var hourSum = +time.hours + Math.floor(minSum / 60);

    if (hourSum < 10) {
      time.hours = '0' + hourSum;
    } else {
      time.hours = hourSum;
    }
  } else if (minSum > 60) {
    if (minSum % 60 < 10) {
      time.minutes = '0' + minSum % 60;
    } else if (minSum % 60 >= 10) {
      time.minutes = minSum % 60;
    }

    var _hourSum = +time.hours + Math.floor(minSum / 60);

    if (_hourSum < 10) {
      time.hours = '0' + _hourSum;
    } else {
      time.hours = _hourSum;
    }
  } else {
    time.minutes = minSum;
  }

  return time.show();
}

function hoursAdd(hour) {
  if (isNaN(hour)) {
    return 'введите число';
  }

  var sum = +time.hours + +hour;

  if (sum > 24 && sum % 24 < 10) {
    time.hours = '0' + sum % 24;
  } else if (sum == 24) {
    time.hours = '00';
  } else if (sum < 10) {
    time.hours = '0' + sum;
  } else {
    time.hours = sum % 24;
  }

  return time.show();
}

document.querySelector('#time__out').textContent = "\u0412\u0440\u0435\u043C\u044F \u0432 \u043E\u0431\u044C\u0435\u043A\u0442\u0435: ".concat(time.show(), ".");
var resultBtn = document.querySelector('#result__button');
resultBtn.addEventListener('click', function () {
  var timeAdd = document.querySelector('#timeAdd').value;
  var operation = document.querySelector('#timeOperation').value;
  var timeOut = 0;

  switch (operation) {
    case 'h':
      timeOut = hoursAdd(timeAdd);
      break;

    case 'm':
      timeOut = minutesAdd(timeAdd);
      break;

    case 's':
      timeOut = secondsAdd(timeAdd);
      break;

    default:
      alert("Не корректная операция");
  }

  document.querySelector('#result__out').textContent = "\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442: ".concat(timeOut, ".");
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
