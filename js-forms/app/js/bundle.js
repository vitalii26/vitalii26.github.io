(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// 0 - 12 - baby
// 13 - 18 - teen
// 19 - 60 - adult
// 61 - 100 - pens
// DOM
console.log('string' + 'uppercase'); // String - 'string' + 1 // '2' + 2 = '22' // '2' - 2 = 0 //
// Number - 
// Boolean - true / false
// Undefined
// Object
// Function

var form = document.querySelector('.form');
var answer = document.querySelector('.answer');

function handelSubmit(event) {
  event.preventDefault();
  var data = {};

  for (var i = 0; i < form.elements.length; i++) {
    if (form.elements[i].name === 'submit') {
      continue;
    }

    data[form.elements[i].name] = form.elements[i].value;
  }

  console.log(data); // Array.from(form.elements).forEach(el => {
  // 	if (el.name !== 'submit') return data[el.name] = el.value;
  // });

  function getStatus(age) {
    if (age < 0 || age > 150) {
      return 'Incorrect value';
    }

    if (age > 0 && age <= 12) {
      return 'baby';
    } else if (age >= 13 && age <= 18) {
      return 'teen';
    } else if (age >= 19 && age <= 60) {
      return 'adult';
    } else {
      return 'pens';
    }
  }

  answer.innerText = "".concat(data.name, " ").concat(data.secname, " is ").concat(getStatus(+data.age));
}

form.addEventListener('submit', handelSubmit);
var palindromForm = document.createElement('form');
palindromForm.classList.add('palindrom-form');
document.body.appendChild(palindromForm);
var palindromInput = document.createElement('input');
var palindromSubmit = document.createElement('input');
var palindromAnswer = document.createElement('p');
palindromAnswer.classList.add('palindrom-form__answer');
palindromInput.setAttribute('name', 'number');
palindromInput.classList.add('palindrom-form__input');
palindromSubmit.setAttribute('type', 'submit');
palindromSubmit.classList.add('palindrom-form__submit');
palindromSubmit.setAttribute('value', 'Submit');
palindromForm.appendChild(palindromInput);
palindromForm.appendChild(palindromSubmit);
palindromForm.appendChild(palindromAnswer);
palindromForm.addEventListener('submit', function (event) {
  event.preventDefault();

  if (palindromInput.value.length !== 5) {
    palindromAnswer.innerText = 'Введите пятизначное число';
    return;
  }

  var isPalindrom = palindromInput.value.split('').reverse().join('') === palindromInput.value; //palindromAnswer.innerText = isPalindrom ? 'Палиндром' : 'Не палиндром';
  // if (isPalindrom === true) {
  // 	palindromAnswer.innerText = 'Палиндром';
  // } else if (isPalindrom === false) {
  // 	palindromAnswer.innerText = 'Не палиндром';
  // }

  if (isPalindrom) {
    palindromAnswer.innerText = 'Палиндром';
  } else {
    palindromAnswer.innerText = 'Не палиндром';
  }
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
